##定义初始变量
#set($tableName = $tool.append($table.name, "ServiceImpl"))
##设置回调
$!callback.setFileName($tool.append($tableName, ".java"))
$!callback.setSavePath($tool.append($table.savePath, "/service/impl"))

##拿到主键
#if(!$table.pkColumn.isEmpty())
    #set($pk = $table.pkColumn.get(0))
#end

#if($table.savePackageName)package $!{table.savePackageName}.#{end}service.impl;

import com.github.pagehelper.PageHelper;
import lombok.extern.slf4j.Slf4j;
import $!{table.savePackageName}.domain.$!{table.name};
import $!{table.savePackageName}.mapper.$!{table.name}Mapper;
import $!{table.savePackageName}.service.$!{table.name}Service;
import $!{table.savePackageName}.util.R;
import org.springframework.stereotype.Service;

import javax.annotation.Resource;

/**
 * $!{table.comment}($!{table.name})表服务实现类
 *
 * @author $!author
 * @since $!time.currTime()
 */
@Slf4j
@Service
public class ${table.serviceImplName} extends ${superServiceImplClass}<${table.mapperName}, ${entity}> implements ${table.serviceName}{
@Resource
private $!{table.name}Mapper $!tool.firstLowerCase($!{table.name})Mapper;

/**
 * 通过ID查询单条数据
 *
 * @param $!pk.name 主键
 * @return 实例对象
 */
@Override
public ${entity} queryById($!pk.shortType $!pk.name) {
        return R.ok().data(this.$!{tool.firstLowerCase($!{table.name})}Mapper.queryById($!pk.name));
        }

/**
 * 全查询
 *
 * @param $!{tool.firstLowerCase($table.name)} 筛选条件
 * @return 查询结果
 */
@Override
public ${entity} queryAll($!{table.name} $!{tool.firstLowerCase($table.name)}) {
        return R.ok().data(this.$!{tool.firstLowerCase($table.name)}Mapper.queryAll($!{tool.firstLowerCase($table.name)}));
        }

/**
 * 模糊全查询
 *
 * @param $!{tool.firstLowerCase($table.name)} 筛选条件
 * @return 查询结果
 */
@Override
public ${entity} queryAllLike($!{table.name} $!{tool.firstLowerCase($table.name)}) {
        return R.ok().data(this.$!{tool.firstLowerCase($table.name)}Mapper.queryAllLike($!{tool.firstLowerCase($table.name)}));
        }

/**
 * 分页查询
 *
 * @param pageNum 页数
 * @param pageSize 每页数量
 * @param $!{tool.firstLowerCase($table.name)} 筛选条件
 * @return 查询结果
 */
@Override
public IPage page(int pageNum, int pageSize, $!{table.name} $!{tool.firstLowerCase($table.name)}) {
        return R.ok().data(PageHelper.startPage(pageNum, pageSize).doSelectPageInfo(() -> this.$!{tool.firstLowerCase($table.name)}Mapper.queryAll($!{tool.firstLowerCase($table.name)})));
        }

/**
 * 分页模糊查询
 *
 * @param pageNum  页数
 * @param pageSize 每页数量
 * @param $!{tool.firstLowerCase($table.name)} 筛选条件
 * @return 查询结果
 */
@Override
public IPage pageLike(int pageNum, int pageSize, $!{table.name} $!{tool.firstLowerCase($table.name)}) {
        return R.ok().data(PageHelper.startPage(pageNum, pageSize).doSelectPageInfo(() -> this.$!{tool.firstLowerCase($table.name)}Mapper.queryAllLike($!{tool.firstLowerCase($table.name)})));
        }

/**
 * 新增数据
 *
 * @param $!tool.firstLowerCase($!{table.name}) 实例对象
 * @return 实例对象
 */
@Override
public boolean insert($!{table.name} $!tool.firstLowerCase($!{table.name})) {
        this.$!{tool.firstLowerCase($!{table.name})}Mapper.insert($!tool.firstLowerCase($!{table.name}));
        return R.ok().data($!tool.firstLowerCase($!{table.name}));
        }

/**
 * 修改数据
 *
 * @param $!tool.firstLowerCase($!{table.name}) 实例对象
 * @return 实例对象
 */
@Override
public boolean update($!{table.name} $!tool.firstLowerCase($!{table.name})) {
        this.$!{tool.firstLowerCase($!{table.name})}Mapper.update($!tool.firstLowerCase($!{table.name}));
        return R.ok().data(this.$!{tool.firstLowerCase($!{table.name})}Mapper.queryById($!{tool.firstLowerCase($!{table.name})}.get$!tool.firstUpperCase($pk.name)()));
        }

/**
 * 通过主键删除数据
 *
 * @param $!pk.name 主键
 * @return 是否成功
 */
@Override
public boolean deleteById($!pk.shortType $!pk.name) {
        boolean del = this.$!{tool.firstLowerCase($!{table.name})}Mapper.deleteById($!pk.name) > 0;
        return R.ok().data(del);
        }
        }